// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.nancy.newapplication.dependencyInjection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory;

public final class NetworkModule_ProvideRxJavaCallAdapterFactoryFactory
    implements Factory<RxJava2CallAdapterFactory> {
  private final NetworkModule module;

  public NetworkModule_ProvideRxJavaCallAdapterFactoryFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public RxJava2CallAdapterFactory get() {
    return Preconditions.checkNotNull(
        module.provideRxJavaCallAdapterFactory(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<RxJava2CallAdapterFactory> create(NetworkModule module) {
    return new NetworkModule_ProvideRxJavaCallAdapterFactoryFactory(module);
  }

  public static RxJava2CallAdapterFactory proxyProvideRxJavaCallAdapterFactory(
      NetworkModule instance) {
    return instance.provideRxJavaCallAdapterFactory();
  }
}
